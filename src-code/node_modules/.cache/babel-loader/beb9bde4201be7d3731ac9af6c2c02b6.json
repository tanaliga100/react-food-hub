{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administrator\\\\OneDrive\\\\Desktop\\\\ACADEME\\\\react-meals2\\\\01-starting-project\\\\src\\\\components\\\\store\\\\cartProvider.js\",\n    _s = $RefreshSig$();\n\nimport { useReducer, useState } from \"react\";\nimport CartContext from \"./cart-context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaulCartState = {\n  items: [],\n  totalAmount: 0\n};\n\nconst cartReducer = (state, action) => {\n  if (action.type === \"ADD_ITEM\") {\n    const updatedItem = state.items.concat(action.item);\n    const existingCartItemIndex = state.items.findIndex(item => item.id === action.item.id);\n    const existingCartItem = state.items[existingCartItemIndex]; //////////////\n\n    let updatedItems;\n\n    if (existingCartItem) {\n      let updatedItem = { ...existingCartItem,\n        amount: existingCartItem.amount + action.item.amount\n      };\n      updatedItems = [...state.items];\n      updatedItems[existingCartItemIndex] = updatedItem;\n    } else {\n      updatedItems = state.items.concat(action.item);\n    }\n\n    const updatedTotalAmount = state.totalAmount + action.item.price * action.item.amount;\n    return {\n      items: updatedItems,\n      totalAmount: updatedTotalAmount\n    };\n  } //////////////\n\n\n  if (action.type === \"REMOVE_ITEM\") {\n    const existingCartItemIndex = state.items.findIndex(item => item.id === action.id);\n    const existingItem = state.items[existingCartItemIndex];\n    const updatedTotalAmount = state.totalAmount - existingItem.price;\n    let updatedItems;\n\n    if (existingItem.amount === 1) {\n      updatedItems = state.items.filter(item => {\n        item.id !== action.id;\n      });\n    } else {\n      const updatedItem = { ...existingImte,\n        amount: existingItem.amount - 1\n      };\n    }\n  }\n\n  return defaulCartState;\n};\n\nconst CartProvider = props => {\n  _s();\n\n  const [cartState, dispatchCartAction] = useReducer(cartReducer, defaulCartState);\n\n  const addItemToCartHandler = item => {\n    dispatchCartAction({\n      type: \"ADD_ITEM\",\n      item: item\n    });\n  };\n\n  const removeItemToCartHandler = id => {\n    dispatchCartAction({\n      type: \"REMOVE_ITEM\",\n      id: id\n    });\n  };\n\n  const cartContext = {\n    items: cartState.items,\n    totalAmount: cartState.totalAmount,\n    addItem: addItemToCartHandler,\n    removeItem: removeItemToCartHandler\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: cartContext,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CartProvider, \"+5vAK6U/UQZ2jW4/JGpTMnQLISY=\");\n\n_c = CartProvider;\nexport default CartProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"sources":["C:/Users/Administrator/OneDrive/Desktop/ACADEME/react-meals2/01-starting-project/src/components/store/cartProvider.js"],"names":["useReducer","useState","CartContext","defaulCartState","items","totalAmount","cartReducer","state","action","type","updatedItem","concat","item","existingCartItemIndex","findIndex","id","existingCartItem","updatedItems","amount","updatedTotalAmount","price","existingItem","filter","existingImte","CartProvider","props","cartState","dispatchCartAction","addItemToCartHandler","removeItemToCartHandler","cartContext","addItem","removeItem","children"],"mappings":"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","sourcesContent":["import { useReducer, useState } from \"react\";\r\nimport CartContext from \"./cart-context\";\r\n\r\nconst defaulCartState = {\r\n  items: [],\r\n  totalAmount: 0,\r\n};\r\n\r\nconst cartReducer = (state, action) => {\r\n  if (action.type === \"ADD_ITEM\") {\r\n    const updatedItem = state.items.concat(action.item);\r\n\r\n    const existingCartItemIndex = state.items.findIndex(\r\n      (item) => item.id === action.item.id\r\n    );\r\n\r\n    const existingCartItem = state.items[existingCartItemIndex];\r\n    //////////////\r\n    let updatedItems;\r\n    if (existingCartItem) {\r\n      let updatedItem = {\r\n        ...existingCartItem,\r\n        amount: existingCartItem.amount + action.item.amount,\r\n      };\r\n      updatedItems = [...state.items];\r\n      updatedItems[existingCartItemIndex] = updatedItem;\r\n    } else {\r\n      updatedItems = state.items.concat(action.item);\r\n    }\r\n\r\n    const updatedTotalAmount =\r\n      state.totalAmount + action.item.price * action.item.amount;\r\n    return {\r\n      items: updatedItems,\r\n      totalAmount: updatedTotalAmount,\r\n    };\r\n  }\r\n\r\n    //////////////\r\n\r\n  if (action.type === \"REMOVE_ITEM\") {\r\n      const existingCartItemIndex = state.items.findIndex(\r\n          item => item.id === action.id\r\n          )\r\n          const existingItem = state.items[existingCartItemIndex]\r\n          const updatedTotalAmount = state.totalAmount - existingItem.price\r\n          let updatedItems;\r\n          if(existingItem.amount === 1 ){\r\n            updatedItems = state.items.filter(item => {\r\n                item.id !== action.id\r\n            })\r\n          }else {\r\n            const updatedItem = {...existingImte, amount: existingItem.amount - 1}\r\n\r\n          }\r\n  }\r\n\r\n  return defaulCartState;\r\n};\r\n\r\nconst CartProvider = (props) => {\r\n  const [cartState, dispatchCartAction] = useReducer(\r\n    cartReducer,\r\n    defaulCartState\r\n  );\r\n\r\n  const addItemToCartHandler = (item) => {\r\n    dispatchCartAction({ type: \"ADD_ITEM\", item: item });\r\n  };\r\n  const removeItemToCartHandler = (id) => {\r\n    dispatchCartAction({ type: \"REMOVE_ITEM\", id: id });\r\n  };\r\n\r\n  const cartContext = {\r\n    items: cartState.items,\r\n    totalAmount: cartState.totalAmount,\r\n    addItem: addItemToCartHandler,\r\n    removeItem: removeItemToCartHandler,\r\n  };\r\n  return (\r\n    <CartContext.Provider value={cartContext}>\r\n      {props.children}\r\n    </CartContext.Provider>\r\n  );\r\n};\r\n\r\nexport default CartProvider;\r\n"]},"metadata":{},"sourceType":"module"}